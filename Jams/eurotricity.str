/*
@title Eurotricity
@by AdmiralVanSynth
@license CC BY-NC-SA
*/

setcpm(288/4)

var basslineGain = slider(0.2, 0, 0.4)
var bassEnvelope = slider(0.834, 0.0, 6)
var introEnvelope = slider(0.57,0, 6)
var phaserRelease = slider(1.244,0,4)
var phaserWobble = slider(0, 0, 32)

var introInstrument = "pulse"
var verseInstrument = "supersaw"

var introGain = "0.6"

var introTranspose = "8M"

 var intro = note(`<[A4 E5  ~ E5]
                    [F5 E5  ~ E5]
                    [A4 E5  ~  ~]
                    [ ~  ~  ~  ~]
                    [F4 C5  ~ C5]
                    [D5 C5  ~ C5]
                    [F4 C5  ~  ~]
                    [ ~  ~  ~  ~]
                    [C4 G4  ~ G4]
                    [A4 G4  ~ G4]
                    [C4 G4  ~  ~]
                    [ ~  ~  ~  ~]
                    [G4 D5  ~ D5]
                    [E5 D5  ~ D5]
                    [G4 D5  ~  ~]
                    [ ~  ~  ~  ~]>`)
             .sound(introInstrument)
             .hcutoff(1600)
             .cutoff(512)
             .lpenv(3)
             .clip(.5)
             .room(.25)
             .transpose(introTranspose)
             .gain(introGain)

 var introBridge = note(`<[A4 E5  ~ E5]
                          [F5 E5  ~ E5]
                          [A4 E5  ~  ~]
                          [ ~  ~  ~  ~]
                          [F4 C5  ~ C5]
                          [D5 C5  ~ C5]
                          [F4 C5  ~  ~]
                          [ ~  ~  ~  ~]
                          [C4 G4  ~ G4]
                          [A4 G4  ~ G4]
                          [C4 G4  ~  ~]
                          [ ~  ~  ~  ~]
                          [G4 D5  ~ D5]
                          [E5 D5  ~ D5]
                          [G4 D5 B4 D5]
                          [C5 D5 C5 D5]>`)
             .sound(introInstrument)
             .hcutoff(1600)
             .cutoff(512)
             .lpenv(3)
             .clip(.5)
             .room(.25)
             .transpose(introTranspose)
             .gain(introGain)



var alternateIntro = note(`<[ ~ E5 A4 E5]
                            [ ~ E5 F5 E5]
                            [ ~ E5 A4 E5]
                            [ ~  ~  ~  ~]
                            [ ~ C5 F4 C5]
                            [ ~ C5 D5 C5]
                            [ ~ C5 F4 C5]
                            [ ~  ~  ~  ~]
                            [ ~ G4 C4 G4]
                            [ ~ G4 A4 G4]
                            [ ~ G4 C4 G4]
                            [ ~  ~  ~  ~]
                            [ ~ D5 G4 D5]
                            [ ~ D5 E5 D5]
                            [ ~ D5 G4 D5]
                            [C5 D5 C5 D5]>`)
             .sound(introInstrument)
             .hcutoff(1600)
             .cutoff(512)
             .lpenv(3)
             .clip(.5)
             .room(.25)
             .transpose(introTranspose)
             .gain(introGain)

var bridge = note(`<[A4 E5  ~ E5]
                    [F5 E5  ~ E5]
                    [A4 E5 C5 E5]
                    [D5 E5 D5 E5]
                    [F4 C5  ~ C5]
                    [D5 C5  ~ C5]
                    [F4 C5 A4 C5]
                    [B4 C5 B4 C5]
                    [C4 G4  ~ G4]
                    [A4 G4  ~ G4]
                    [C4 G4 E4 G4]
                    [F4 G4 F4 G4]
                    [G4 D5  ~ D5]
                    [E5 D5  ~ D5]
                    [G4 D5 B4 D5]
                    [C5 D5 C5 D5]>`)
             .sound(introInstrument)
             .hcutoff(1600)
             .cutoff(512)
             .lpenv(3)
             .clip(.5)
             .room(.25)
             .transpose(introTranspose)
             .gain(introGain)



var phaserAm = chord(`<[C]/4>`).s("supersaw").voicing().phaser(phaserWobble).gain(0.05)
var phaserG = chord(`<[G]/4>`).s("supersaw").voicing().phaser(phaserWobble).gain(0.05)

var pads = chord(`<[Am F C G]/16>`).s("gm_pad_sweep").voicing().room(0.2).gain(0.05)
var padG = chord(`<[G]/4>`).s("gm_pad_sweep").voicing().sustain(1).release(1).room(0.0).gain(0.05)
var padAm = chord(`<[Am]/4>`).s("gm_pad_sweep").voicing().sustain(1).release(1).room(0.0).gain(0.05)

var drums = s("rolandtr909_bd").struct("x - x -").gain(0.2)

var drumsDouble = s("rolandtr909_bd").struct("x - x - x - x - x - x - x - x x").slow(4).gain(0.2)

var closedhats = s("rolandtr909_hh").struct("x - x x x - x x").room(0.4).gain(0.1)
var openhats = s("rolandtr909_oh").struct("x - - -").gain(0.1)
var doubleOpenHats = s("rolandtr909_hh").struct("x - x -").gain(0.1)
var handclaps = s("rolandtr909_cp").struct("x - - -").gain(0.1)

var snareDrumsCrash = s("rolandtr909_sd").struct("x x x x x x x x").gain("<.0!8 .04 .06 .08 .1 .15 .2 .2 .2>")

var crash = s("rolandtr909_cr").struct("- - - - - - - - - - - - - - - - - - - - - - - - x - x - x x x x").slow(16).gain("<.0!2 .01!2 .1!2 .2 .25>")

var bass = note("<[A2 F2 C2 G2]/16>")
          .sound("gm_synth_bass_1")
          .cutoff(150)
          .lpenv(bassEnvelope)
          .room(0.2)
          .struct("x - x x x - x x")
          .gain(basslineGain)

var bassG = note("<[G2]/4>")
          .sound("gm_synth_bass_1")
          .cutoff(150)
          .lpenv(bassEnvelope)
          .room(0.2)
          .struct("x - x x x - x x")
          .gain(basslineGain)

var verse =  note(`<[~ C5 C5 {C5 B4}]
                   [C5 C5 C5 ~]
                   [~ A4 A4 {G4 A4 G4}]
                   [A4 A4 A4 G4]
                   [~ E4 E4 {E4 D4}]
                   [E4 E4 E4 ~]
                   [~ B4 B4 {A4 B4 A4}]
                   [B4 B4 B4 A4]
                   [~ C5 C5 {C5 B4}]
                   [C5 C5 C5 ~]
                   [~ A4 A4 {G4 A4 G4}]
                   [A4 A4 A4 G4]
                   [~ E4 E4 {E4 D4}]
                   [E4 E4 E4 ~]
                   [~ B4 B4 {A4 B4 A4}]
                   [B4 B4 B4 A4]>`).sound(verseInstrument)
  .legato(`<[1.5 0.25 0.5 2]
          [1.0 1 .5 1]
          [0.5 0.25 0.5 0.25]
          [1.0 1 .5 2]>`)
  .lpf(sine.range(1200, 10000).slow(4))
             .gain(0.4)
             ._pianoroll()
var bassMelody = note(`<[F2 F2 F2 F2 E2 E2 E2 E2]
                        [C2 B1 A1 G1 F1 F1 F1 F1]
                        [F2 F2 F2 F2 E2 E2 E2 E2]
                        [C2 B1 A1 G1 F1 F1 F1 F1]
                        [E2 E2 E2 E2 D2 D2 D2 D2]
                        [B1 A1 G1 F1 E1 E1 E1 E1]
                        [E2 E2 E2 E2 D2 D2 D2 D2]
                        [B1 A1 G1 F1 E1 E1 E1 E1]>`).slow(2)
          .sound("gm_synth_bass_1")
          .cutoff(400)
          .room(0.2)
          .gain(0.2)

$: arrange([1*4, stack(phaserAm, padAm)],
           [1*4, stack(phaserG, padG, bassG)],
           [1*16, stack(alternateIntro, pads, bass)],
           [1*16, stack(intro, bass, pads, doubleOpenHats)],
           [1*16, stack(introBridge, bass, doubleOpenHats, openhats, pads)],
           [1*16, stack(bridge, drumsDouble, openhats, handclaps, closedhats, bass, pads)],
           [1*16, stack(bridge, drumsDouble, snareDrumsCrash, crash, openhats, handclaps, closedhats, bass, pads)],
           [2*16, stack(verse, openhats, handclaps, closedhats, bass, drumsDouble, pads)],
           [1*16, stack(openhats, pads.gain(0.1), handclaps, closedhats, bassMelody)],
           [1*16, stack(alternateIntro, drums, openhats, handclaps, closedhats, bass, pads)],
           [1*16, stack(intro, drums, openhats, handclaps, closedhats, bass, pads)],
           [1*16, stack(introBridge, drumsDouble, openhats, handclaps, closedhats, bass, pads)],
           [1*16, stack(bridge, drums, openhats, snareDrumsCrash, crash, handclaps, closedhats, bass, pads)],
           [2*16, stack(verse, openhats, handclaps, closedhats, bass, drumsDouble, pads)],
           [1*16, stack(introBridge, drumsDouble, openhats, handclaps, closedhats, bass, pads)],
           [1*16, stack(bridge, openhats, handclaps, closedhats, bass, pads)],
           [1*4, stack(pads)])
          .pianoroll({background: '#0F172D', active: '#323E72', inactive: '#435499'})